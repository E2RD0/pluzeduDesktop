<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="lineShape1.Bounds" type="System.Drawing.Rectangle, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>0, 48, 268, 0</value>
  </metadata>
  <metadata name="lineShape1.Location" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>0, 48</value>
  </metadata>
  <metadata name="lineShape1.Size" type="System.Drawing.Size, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>268, 0</value>
  </metadata>
  <metadata name="lineShape1.Bounds" type="System.Drawing.Rectangle, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>0, 48, 268, 0</value>
  </metadata>
  <metadata name="lineShape1.Location" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>0, 48</value>
  </metadata>
  <metadata name="lineShape1.Size" type="System.Drawing.Size, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>268, 0</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        PVZMAAAAAElFTkSuQmCC
</value>
  </data>
</root>